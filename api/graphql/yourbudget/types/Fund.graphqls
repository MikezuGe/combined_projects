type Fund {
  id: ID
  name: String
  amount: Float
  date: Date
  isIncome: Boolean
}

input FundFilters {
  id: ID
  name: String
  minAmount: Float
  maxAmount: Float
  startDate: Date
  endDate: Date
}

input FundInput {
  name: String!
  amount: Float!
  date: Date!
  isIncome: Boolean!
}

input FundUpdate {
  name: String
  amount: Float
  date: Date
  isIncome: Boolean
}

type Query {
  getFunds(filters: FundFilters): [Fund]
}

type Mutation {
  createFund(input: FundInput!): Fund
  updateFund(filters: FundFilters!, input: FundUpdate!): Fund
  removeFund(filters: FundFilters!): Fund
}
